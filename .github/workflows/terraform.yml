name: 'Terraform'

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
  pull_request:
    branches:
      - main
    paths:
      - '**.tf'


permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    env:
      TF_VAR_bucket_name: ${{ secrets.bucket_name }}
      TF_VAR_bucket_location: ${{ secrets.bucket_location }}
      TF_VAR_main_page_suffix: ${{ secrets.main_page_suffix }}
      TF_VAR_source: ${{ secrets.source }}
      TF_VAR_dns_zone_name: ${{ secrets.dns_zone_name }}
      TF_VAR_dns_name: ${{ secrets.dns_name }}
      TF_VAR_global_address_name: ${{ secrets.global_address_name }}
      TF_VAR_ssl_certificate_name: ${{ secrets.ssl_certificate_name }}
      TF_VAR_domain_name: ${{ secrets.domain_name }}
      TF_VAR_https_proxy_name: ${{ secrets.https_proxy_name }}
      TF_VAR_forwarding_rule_name: ${{ secrets.forwarding_rule_name }}
      TF_VAR_cloudflare_email: ${{ secrets.cloudflare_email }}
      TF_VAR_cloudflare_api_token: ${{ secrets.cloudflare_api_token }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.cloudflare_zone_id }}
      TF_VAR_project: ${{ secrets.project }}
      TF_VAR_region: ${{ secrets.region }}
      TF_VAR_location_id: ${{ secrets.location_id }}
      TF_VAR_service_account_email: ${{ secrets.service_account_email }}
      TF_VAR_repository: ${{ secrets.repository }}
      TF_VAR_location: ${{ secrets.location }}
      TF_VAR_gateway_id: ${{ secrets.gateway_id }}
      TF_VAR_service_account: ${{ secrets.service_account }}
      TF_VAR_image: ${{ secrets.image }}
      TF_VAR_credentials: ${{ secrets.GCP_CREDENTIALS }}
    

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set GOOGLE_CREDENTIALS
        run: echo "${{ secrets.GCP_CREDENTIALS }}" | base64 --decode > credentials.json
      
      - name: Create API Spec file
        run: echo "${{ secrets.API_SPEC_SECRET }}" | base64 --decode > api-spec.yml


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Import existing resources
        run: terraform import module.load-balancer.google_compute_global_address.default GLOBAL_ADDRESS_ID
  
      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
